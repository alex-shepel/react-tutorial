{"version":3,"sources":["index.js"],"names":["Square","value","onClick","className","Board","i","this","props","squares","renderSquare","React","Component","Game","handleClick","history","state","at","calculateWinner","isXNext","setState","Array","fill","winner","nextPlayer","stepIdx","slice","map","_","idx","desc","jumpTo","getStatus","getMoves","lines","length","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"6NAIMA,EAAS,SAAC,GAAD,IAAEC,EAAF,EAAEA,MAAOC,EAAT,EAASA,QAAT,OACb,wBAAQC,UAAU,SAASD,QAASA,EAApC,SACGD,KAGCG,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OAAO,cAACL,EAAD,CAAQC,MAAOK,KAAKC,MAAMC,QAAQH,GAAIH,QAAS,kBAAM,EAAKK,MAAML,QAAQG,Q,oBAGjF,WACE,OACE,gCACE,sBAAKF,UAAU,YAAf,UACGG,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,MAErB,sBAAKN,UAAU,YAAf,UACGG,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,MAErB,sBAAKN,UAAU,YAAf,UACGG,KAAKG,aAAa,GAClBH,KAAKG,aAAa,GAClBH,KAAKG,aAAa,a,GArBTC,IAAMC,WA4BpBC,E,kDACJ,WAAYL,GAAQ,IAAD,8BACjB,cAAMA,IASRM,YAAc,SAAAR,GACZ,IAAMS,EAAU,EAAKC,MAAMD,QACrBN,EAAO,YAAOM,EAAQE,IAAI,GAAGR,SAC/BS,EAAgBT,IAAYA,EAAQH,KAGxCG,EAAQH,GAAK,EAAKU,MAAMG,QAAU,IAAM,IACxC,EAAKC,SAAS,CACZL,QAAQ,GAAD,mBAAMA,GAAN,CAAe,CAACN,aACvBU,SAAU,EAAKH,MAAMG,YAjBvB,EAAKH,MAAQ,CACXD,QAAS,CACP,CAACN,QAASY,MAAM,GAAGC,KAAK,QAE1BH,SAAS,GANM,E,6CAuBnB,WACE,IAAMI,EAASL,EAAgBX,KAAKS,MAAMD,QAAQE,IAAI,GAAGR,SACnDe,EAAcjB,KAAKS,MAAMG,QAAU,IAAM,IAC/C,OAAOI,EAAM,UAAMA,EAAN,gCAAsCC,K,oBAGrD,SAAOC,GACLlB,KAAKa,SAAS,CACZL,QAASR,KAAKS,MAAMD,QAAQW,MAAM,EAAGD,EAAU,GAC/CN,QAASM,EAAU,IAAM,M,sBAI7B,WAAY,IAAD,OACT,OAAOlB,KAAKS,MAAMD,QAAQY,KAAI,SAACC,EAAGC,GAChC,IAAMC,EAAOD,EAAG,qFAAqBA,GAAQ,uEAC7C,OACE,6BACE,wBAAQ1B,QAAS,kBAAM,EAAK4B,OAAOF,IAAnC,SAA0CC,KADnCD,Q,oBAOf,WACE,IAAMpB,EAAUF,KAAKS,MAAMD,QAAQE,IAAI,GAAGR,QACpCU,EAAUZ,KAAKS,MAAMG,QACrBhB,EAAUI,KAAKO,YAErB,OACE,sBAAKV,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACC,EAAD,CACEI,QAASA,EACTU,QAASA,EACThB,QAASA,MAGb,sBAAKC,UAAU,YAAf,UACE,8BAAMG,KAAKyB,cACX,6BAAKzB,KAAK0B,uB,GAhEDtB,IAAMC,WAuEzB,SAASM,EAAgBT,GAWvB,IAVA,IAAMyB,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMC,OAAQ7B,IAAK,CAAC,IAAD,cACnB4B,EAAM5B,GADa,GAC9B8B,EAD8B,KAC3BC,EAD2B,KACxBC,EADwB,KAErC,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KAKTG,IAASC,OAAO,cAAC3B,EAAD,IAAU4B,SAASC,eAAe,U","file":"static/js/main.d4d082e1.chunk.js","sourcesContent":["import React from 'react';\nimport './index.css';\nimport ReactDOM from \"react-dom\";\n\nconst Square = ({value, onClick}) =>\n  <button className=\"square\" onClick={onClick}>\n    {value}\n  </button>\n\nclass Board extends React.Component {\n  renderSquare(i) {\n    return <Square value={this.props.squares[i]} onClick={() => this.props.onClick(i)} />;\n  }\n\n  render() {\n    return (\n      <div>\n        <div className=\"board-row\">\n          {this.renderSquare(0)}\n          {this.renderSquare(1)}\n          {this.renderSquare(2)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(3)}\n          {this.renderSquare(4)}\n          {this.renderSquare(5)}\n        </div>\n        <div className=\"board-row\">\n          {this.renderSquare(6)}\n          {this.renderSquare(7)}\n          {this.renderSquare(8)}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass Game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      history: [\n        {squares: Array(9).fill(null)}\n      ],\n      isXNext: true,\n    }\n  }\n\n  handleClick = i => {\n    const history = this.state.history;\n    const squares = [...history.at(-1).squares];\n    if (calculateWinner(squares) || squares[i]) {\n      return;\n    }\n    squares[i] = this.state.isXNext ? 'X' : 'O';\n    this.setState({\n      history: [...history, {squares}],\n      isXNext: !this.state.isXNext,\n    });\n  }\n\n  getStatus() {\n    const winner = calculateWinner(this.state.history.at(-1).squares);\n    const nextPlayer = (this.state.isXNext ? 'X' : 'O');\n    return winner ? `${winner} won!` : `Next player: ${nextPlayer}`;\n  }\n\n  jumpTo(stepIdx) {\n    this.setState({\n      history: this.state.history.slice(0, stepIdx + 1),\n      isXNext: stepIdx % 2 === 0,\n    });\n  }\n\n  getMoves() {\n    return this.state.history.map((_, idx) => {\n      const desc = idx ? `Перейти к ходу ${idx}` : 'К началу игры';\n      return (\n        <li key={idx}>\n          <button onClick={() => this.jumpTo(idx)}>{desc}</button>\n        </li>\n      );\n    });\n  }\n\n  render() {\n    const squares = this.state.history.at(-1).squares;\n    const isXNext = this.state.isXNext;\n    const onClick = this.handleClick;\n\n    return (\n      <div className=\"game\">\n        <div className=\"game-board\">\n          <Board\n            squares={squares}\n            isXNext={isXNext}\n            onClick={onClick}\n          />\n        </div>\n        <div className=\"game-info\">\n          <div>{this.getStatus()}</div>\n          <ol>{this.getMoves()}</ol>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nReactDOM.render(<Game />, document.getElementById('root'));\n"],"sourceRoot":""}